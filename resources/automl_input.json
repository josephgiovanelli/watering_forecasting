{
    "prototype": {
        "choice": [
            "regression"
        ]
    },
    "regression": {
        "choice": [
            {
                "type": "PersistentSystem"
            },
            {
                "type": "MLPRegressor",
                "hidden_layer_sizes": {
                    "choice": [
                        "[1024]",
                        "[512]",
                        "[128]",
                        "[64]",
                        "[1024, 1024]",
                        "[512, 512]",
                        "[128, 128]",
                        "[64, 64]",
                        "[1024, 1024, 1024]",
                        "[512, 512, 512]",
                        "[128, 128, 128]",
                        "[64, 64, 64]",
                        "[1024, 1024, 1024, 1024]",
                        "[512, 512, 512, 512]",
                        "[128, 128, 128, 128]",
                        "[64, 64, 64, 64]"
                    ]
                },
                "activation": {
                    "choice": [
                        "logistic",
                        "tanh",
                        "relu"
                    ]
                },
                "solver": {
                    "choice": [
                        "lbfgs",
                        "sgd",
                        "adam"
                    ]
                },
                "alpha": {
                    "loguniform": [
                        1e-5,
                        1e-1
                    ]
                },
                "learning_rate": {
                    "choice": [
                        "constant",
                        "invscaling",
                        "adaptive"
                    ]
                },
                "learning_rate_init": {
                    "loguniform": [
                        1e-4,
                        1e-1
                    ]
                },
                "power_t": {
                    "uniform": [
                        1e-1,
                        1.0
                    ]
                },
                "max_iter": {
                    "choice": [
                        50,
                        100,
                        150,
                        200,
                        250,
                        300
                    ]
                },
                "momentum": {
                    "quniform": [
                        0.0,
                        1.0,
                        0.1
                    ]
                },
                "nesterovs_momentum": {
                    "choice": [
                        true,
                        false
                    ]
                },
                "beta_1": {
                    "quniform": [
                        0.1,
                        0.9,
                        0.1
                    ]
                },
                "beta_2": {
                    "quniform": [
                        0.001,
                        0.999,
                        0.001
                    ]
                },
                "epsilon": {
                    "loguniform": [
                        1e-10,
                        1e-5
                    ]
                }
            },
            {
                "type": "DecisionTreeRegressor",
                "criterion": {
                    "choice": [
                        "squared_error",
                        "friedman_mse",
                        "absolute_error"
                    ]
                },
                "splitter": {
                    "choice": [
                        "best",
                        "random"
                    ]
                },
                "max_features": {
                    "choice": [
                        "auto",
                        "sqrt",
                        "log2"
                    ]
                }
            },
            {
                "type": "RandomForestRegressor",
                "n_estimators": {
                    "choice": [
                        10,
                        30,
                        50,
                        70,
                        100
                    ]
                },
                "criterion": {
                    "choice": [
                        "squared_error",
                        "absolute_error"
                    ]
                },
                "max_features": {
                    "choice": [
                        "auto",
                        "sqrt",
                        "log2"
                    ]
                },
                "bootstrap": {
                    "choice": [
                        true,
                        false
                    ]
                },
                "oob_score": {
                    "choice": [
                        true,
                        false
                    ]
                },
                "n_jobs": {
                    "choice": [
                        -1
                    ]
                },
                "warm_start": {
                    "choice": [
                        true,
                        false
                    ]
                }
            },
            {
                "type": "ExtraTreesRegressor",
                "n_estimators": {
                    "choice": [
                        10,
                        30,
                        50,
                        70,
                        100
                    ]
                },
                "criterion": {
                    "choice": [
                        "squared_error",
                        "absolute_error"
                    ]
                },
                "max_features": {
                    "choice": [
                        "auto",
                        "sqrt",
                        "log2"
                    ]
                },
                "bootstrap": {
                    "choice": [
                        true,
                        false
                    ]
                },
                "oob_score": {
                    "choice": [
                        true,
                        false
                    ]
                },
                "n_jobs": {
                    "choice": [
                        -1
                    ]
                },
                "warm_start": {
                    "choice": [
                        true,
                        false
                    ]
                }
            },
            {
                "super_type": "MultiOutputRegressor",
                "type": "BaggingRegressor",
                "base_estimator": {
                    "choice": [
                        "DecisionTreeRegressor",
                        "SVR"
                    ]
                },
                "n_estimators": {
                    "choice": [
                        5,
                        10,
                        15
                    ]
                },
                "bootstrap": {
                    "choice": [
                        true,
                        false
                    ]
                },
                "bootstrap_features": {
                    "choice": [
                        true,
                        false
                    ]
                },
                "oob_score": {
                    "choice": [
                        true,
                        false
                    ]
                },
                "n_jobs": {
                    "choice": [
                        -1
                    ]
                },
                "warm_start": {
                    "choice": [
                        true,
                        false
                    ]
                }
            },
            {
                "super_type": "MultiOutputRegressor",
                "type": "AdaBoostRegressor",
                "base_estimator": {
                    "choice": [
                        "DecisionTreeRegressor",
                        "SVR"
                    ]
                },
                "n_estimators": {
                    "choice": [
                        10,
                        30,
                        50,
                        70,
                        100
                    ]
                },
                "learning_rate": {
                    "loguniform": [
                        0.1,
                        4.0
                    ]
                },
                "loss": {
                    "choice": [
                        "linear",
                        "square",
                        "exponential"
                    ]
                }
            },
            {
                "super_type": "MultiOutputRegressor",
                "type": "HistGradientBoostingRegressor",
                "loss": {
                    "choice": [
                        "squared_error",
                        "absolute_error",
                        "quantile"
                    ]
                },
                "quantile": {
                    "uniform": [
                        0.0,
                        1.0
                    ]
                },
                "learning_rate": {
                    "uniform": [
                        0.1,
                        1.0
                    ]
                },
                "max_iter": {
                    "choice": [
                        30,
                        50,
                        100,
                        150
                    ]
                },
                "l2_regularization": {
                    "quniform": [
                        0.0,
                        0.1,
                        0.0001
                    ]
                }
            },
            {
                "super_type": "MultiOutputRegressor",
                "type": "SVR",
                "kernel": {
                    "choice": [
                        "linear",
                        "poly",
                        "rbf",
                        "sigmoid",
                        "precomputed"
                    ]
                },
                "degree": {
                    "choice": [
                        2,
                        3,
                        4,
                        5
                    ]
                },
                "gamma": {
                    "choice": [
                        "scale",
                        "auto"
                    ]
                },
                "tol": {
                    "loguniform": [
                        1e-4,
                        1e-2
                    ]
                },
                "C": {
                    "choice": [
                        0.001,
                        0.01,
                        0.1,
                        1,
                        5
                    ]
                },
                "epsilon": {
                    "loguniform": [
                        0.001,
                        1.0
                    ]
                },
                "shrinking": {
                    "choice": [
                        true,
                        false
                    ]
                }
            },
            {
                "type": "keras",
                "num_epochs": {
                    "randint": [
                        1,
                        500
                    ]
                },
                "batch_size": {
                    "choice": [
                        1,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512
                    ]
                },
                "neuron_count_per_hidden_layer": {
                    "choice": [
                        "[256, 256]",
                        "[128, 128]",
                        "[64, 64]",
                        "[32, 32]",
                        "[16, 16]",
                        "[256, 256, 256]",
                        "[128, 128, 128]",
                        "[64, 64, 64]",
                        "[32, 32, 32]",
                        "[16, 16, 16]",
                        "[128, 64, 128]",
                        "[128, 64, 32, 64, 128]",
                        "[256, 128, 64, 128, 256]",
                        "[256, 128, 64, 32, 64, 128, 256]"
                    ]
                },
                "dropout": {
                    "quniform": [
                        0.0,
                        0.9,
                        0.1
                    ]
                },
                "activation_function": {
                    "choice": [
                        "sigmoid",
                        "tanh",
                        "ReLU",
                        "softmax"
                    ]
                },
                "last_activation_function": {
                    "choice": [
                        "sigmoid",
                        "tanh",
                        "ReLU",
                        "softmax"
                    ]
                },
                "optimizer": {
                    "choice": [
                        "SGD",
                        "Adagrad",
                        "RMSProp",
                        "Adadelta",
                        "Adam"
                    ]
                }
            }
        ]
    }
}